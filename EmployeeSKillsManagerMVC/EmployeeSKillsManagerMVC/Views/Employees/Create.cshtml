@model EmployeeSkillsManager.DomainClasses.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<fieldset>
    <legend>Add Employee</legend>
  
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="editor-label">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.TotalExp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.TotalExp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalExp, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="editor-label">
        @Html.LabelFor(model => model.EmployeeDepartmentID, "EmployeeDepartmentID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.DropDownList("EmployeeDepartmentID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmployeeDepartmentID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
        </div>
    </div>

  

    <p>
        <input type="submit" value="Create" />
    </p>
</fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
